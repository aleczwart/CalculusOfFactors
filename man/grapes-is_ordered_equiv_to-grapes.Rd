% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_equiv.R
\name{\%is_ordered_equiv_to\%}
\alias{\%is_ordered_equiv_to\%}
\title{Equivalence of factors}
\usage{
f \%is_ordered_equiv_to\% g
}
\arguments{
\item{f}{factor}

\item{g}{factor, of length equal to \code{f}.}
}
\value{
Logical \code{TRUE} or \code{FALSE} value.
}
\description{
Compare factors \code{f} and \code{g} for 'ordered equivalence',
meaning that the two factors define the same partition/grouping
with the same level order encoding, regardless of differences in
level labels between the factors. \code{\%is_ordered_equiv_to\%} is
a binary operator version of \code{\link{fct_equiv}} with
specified argument \code{ordered=TRUE}.
}
\details{
\code{\%is_ordered_equiv_to\%} provides a binary operator version of
the function \code{\link{fct_equiv}} with specified argument
\code{ordered=TRUE}, to test for 'ordered equivalence' between two
factors.  Ordered equivalence implies that the two factors define
the same partition/grouping with the same level order encoding,
regardless of differences in level labels between the two factors.

Regarding unused levels: If one or other of the factors has unused
levels, these may effect the level encoding of a factor, depending
upon where the unused levels occur in the level order.  The key
thing to remember is that two factors \code{f} and \code{g} are
regarded as 'ordered equivalent' if and only if
\code{as.integer(f)==as.integer(g)} is \code{TRUE}.  See the
examples for \code{\link{fct_equiv}} an illustration of the ways
in which unused levels may, or may not affect ordered equivalence
status.  In general, some care is needed when dealing with factors
containing unused levels. Function \code{\link{droplevels}} can be
applied to a factor to remove any unused levels (and this author
generally prefers to work with factors that have been stripped of
any unused levels), but do bear in mind that use of
\code{\link{droplevels}} may change the level order encoding of a
factor...

Note that, consistent with R's general philosophy, factors
containing \code{NA} values will return an \code{NA} result from
\code{fct_equiv}.
}
\examples{
## Define a factor f:
f <- factor(c(1,1,1,3,3,3,2,2,2,3,3,3,3),
           levels=1:3,
           labels=LETTERS[1:3])
f

## Factor g has different labels to f:
g <- factor(c(1,1,1,3,3,3,2,2,2,3,3,3,3),
            levels = 1:3,
            labels=LETTERS[5:7])
g

## ...but represents the same partition, AND has the same level
## order encoding, hence is ordered equivalent:
f \%is_ordered_equiv_to\% g

## See the help for function fct_equiv() for further examples and
## discussion.

}
\author{
Alexander Zwart <alec.zwart at csiro.au>
}
\seealso{
Binary operator \code{\link{\%is_equiv_to\%}} for testing
unordered equivalence, and function \code{\link{fct_equiv}}.
}

