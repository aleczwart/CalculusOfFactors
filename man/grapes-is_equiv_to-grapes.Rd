% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_equiv.R
\name{\%is_equiv_to\%}
\alias{\%is_equiv_to\%}
\title{Equivalence of factors}
\usage{
f \%is_equiv_to\% g
}
\arguments{
\item{f}{factor}

\item{g}{factor, of length equal to \code{f}.}
}
\value{
Logical \code{TRUE} or \code{FALSE} value.
}
\description{
Compare factors \code{f} and \code{g} for 'unordered equivalence'
meaning that the two factors define the same partition/grouping,
regardless of differences in level labels between the
factors. \code{\%is_equiv_to\%} is a binary operator version of
\code{\link{fct_equiv}} with specified argument
\code{ordered=FALSE}.
}
\details{
\code{\%is_equiv_to\%} provides a binary operator version of the
function \code{\link{fct_equiv}} to test for 'unordered equivalence'
between two factors, meaning that the two factors define the same
partition/grouping, regardless of differences in level labels
between the two factors.

\code{\%is_equiv_to\%} specifically tests the weaker condition of
\emph{unordered} equivalence (\code{ordered=FALSE}, the default)
which does \emph{not} require that the factor level order
encodings be identical for the two factors to be regarded as
equivalent.

Regarding unused levels: If one or other of the factors has unused
levels, these will be \emph{ignored} in testing for unordered
equivalence - factors are compared on the basis of the levels that
are used, only.

Note that, consistent with R's general philosophy, factors
containing \code{NA} values will return an \code{NA} result from
\code{fct_equiv}.
}
\examples{

}
\author{
Alexander Zwart <alec.zwart at csiro.au>
}
